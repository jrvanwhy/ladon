Goal: Compiled, better Python (statically typed)

Indentation syntax:
	1 tab is 1 indentation level.
	Spaces are never counted as indentation.
	Indentation must match the code's flow (not matching is a compilation error)

Variable declaration/typing:
	Use var keyword to declare variable(s) (all variables are mutable)
	Have Rust-style destructuring
	Types are determined by the rhs of the assignment (aka C++11's auto keyword)
	int refers to an arbitrary-sized type

Function/method declaration:
	Example function definition for a function to evaluate f(x, y) = a*x + b*y + c and its first derivatives:

		fn (a: int, b: int, c: int).binom_pows(x: int, y: int) -> (fval: int, dx: int, dy: int) {
			fval = a * x + b * y + c;
			dx = a;
			dy = b;
			return;
		}

	Example invocation of the above function:

		var (poly_val, _, _) = (1, 2, 3).binom_pows(4, 5);

	Notes on definitions:

		There are two sets of parameter definitions in the name -- those before the dot and those after the dot.
		We would make it an error for the first set to be empty and the second set to be nonempty to enforce
		postfix conventions.

		To have no return values, return type ()
